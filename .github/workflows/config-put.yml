name: Update Curated Collections

on:
  push:
    branches:
      - main

jobs:
  curate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Ensure we can diff against previous commit

      - name: Build curator
        id: build_curator
        uses: ./.github/actions/build-curator

      - name: Determine changed TOML and thumbnail files
        id: changed
        run: |
          TOML_FILES=$(git diff --name-only HEAD^ HEAD \
            | grep '\.toml$' \
            | grep -v 'Cargo\.toml$' || true)

          WEBP_FILES=$(git diff --name-only HEAD^ HEAD \
            | grep 'thumbnail\.webp$' || true)

          echo "Changed TOML files:"
          echo "$TOML_FILES"

          echo "Changed thumbnail.webp files:"
          echo "$WEBP_FILES"

          echo "toml_files<<EOF" >> $GITHUB_OUTPUT
          echo "$TOML_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "webp_files<<EOF" >> $GITHUB_OUTPUT
          echo "$WEBP_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Submit updated TOML configs and thumbnails
        if: steps.changed.outputs.toml_files != '' || steps.changed.outputs.webp_files != ''
        run: |
          touched_files=()

          # Split and iterate over TOML files
          IFS=$'\n' read -d '' -r -a toml_lines <<< "${{ steps.changed.outputs.toml_files }}"
          for file in "${toml_lines[@]}"; do
            [ -f "$file" ] && touched_files+=("$file")
          done

          # Split and iterate over WEBP files
          IFS=$'\n' read -d '' -r -a webp_lines <<< "${{ steps.changed.outputs.webp_files }}"
          for file in "${webp_lines[@]}"; do
            dir=$(dirname "$file")
            toml="$dir/overview.toml"
            if [ -f "$toml" ]; then
              touched_files+=("$toml")
            else
              echo "⚠️ Warning: No overview.toml found for $file"
            fi
          done

          # Deduplicate
          unique_files=($(printf "%s\n" "${touched_files[@]}" | sort -u))

          # Submit all
          for file in "${unique_files[@]}"; do
            echo "Submitting $file..."
            ${{ steps.build_curator.outputs.curator-path }} update "$file"
          done
